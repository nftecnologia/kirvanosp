#!/bin/bash
set -e

# Remove um PID file pré-existente do servidor.
rm -f /app/tmp/pids/server.pid

# Criar diretórios necessários
mkdir -p /app/log /app/tmp/pids

# Configurar ambiente de produção
export RAILS_ENV="${RAILS_ENV:-production}"

echo "=== Iniciando aplicação em modo $RAILS_ENV ==="

# Verificar se banco está acessível usando pg_isready
echo "=== Verificando conexão com banco de dados ==="
if [ -n "$DATABASE_URL" ]; then
  # Extrair host e porta da DATABASE_URL
  DB_HOST=$(echo $DATABASE_URL | sed -n 's/.*@\([^:]*\):.*/\1/p')
  DB_PORT=$(echo $DATABASE_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')
  
  echo "Tentando conectar ao PostgreSQL em $DB_HOST:$DB_PORT..."
  until pg_isready -h "$DB_HOST" -p "$DB_PORT" >/dev/null 2>&1; do
    echo "Aguardando PostgreSQL estar disponível..."
    sleep 3
  done
  echo "✅ PostgreSQL está acessível!"
else
  echo "⚠️ DATABASE_URL não configurada, pulando verificação"
fi

# Executar migrações com debugging
echo "=== Executando migrações e preparação do banco ==="

echo "Criando banco se necessário:"
bundle exec rake db:create || echo "Banco já existe ou erro na criação"

echo "Executando migrações:"
bundle exec rake db:migrate || echo "Erro nas migrações"

echo "=== Migrações concluídas! ==="

# Executa o comando passado
echo "=== Iniciando comando: $@ ==="
exec "$@" 